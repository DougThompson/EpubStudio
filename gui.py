# -*- coding: utf-8 -*- ############################################################################# Python code generated with wxFormBuilder (version Sep 12 2010)## http://www.wxformbuilder.org/#### PLEASE DO "NOT" EDIT THIS FILE!###########################################################################import wxm_mniOpenId = 1000m_mniSaveId = 1001############################################################################# Class MainFrameBase###########################################################################class MainFrameBase ( wx.Frame ):		def __init__( self, parent ):		wx.Frame.__init__ ( self, parent, id = wx.ID_ANY, title = u"EPUB Studio", pos = wx.DefaultPosition, size = wx.Size( 1200,900 ), style = wx.DEFAULT_FRAME_STYLE|wx.TAB_TRAVERSAL )				self.SetSizeHintsSz( wx.DefaultSize, wx.DefaultSize )				bSizer2 = wx.BoxSizer( wx.VERTICAL )				self.m_panel = wx.Panel( self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.TAB_TRAVERSAL )		bSizer3 = wx.BoxSizer( wx.HORIZONTAL )				self.m_splitter2 = wx.SplitterWindow( self.m_panel, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.SP_3D|wx.SP_BORDER )		self.m_splitter2.Bind( wx.EVT_IDLE, self.m_splitter2OnIdle )				self.m_panel2 = wx.Panel( self.m_splitter2, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.TAB_TRAVERSAL )		bSizer4 = wx.BoxSizer( wx.VERTICAL )				self.m_treeFiles = wx.TreeCtrl( self.m_panel2, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.TR_DEFAULT_STYLE )		bSizer4.Add( self.m_treeFiles, 1, wx.ALL|wx.EXPAND, 5 )				bSizer5 = wx.BoxSizer( wx.VERTICAL )				self.m_btnDelete = wx.Button( self.m_panel2, wx.ID_ANY, u"Delete File", wx.DefaultPosition, wx.DefaultSize, 0 )		bSizer5.Add( self.m_btnDelete, 1, wx.ALL, 5 )				self.m_staticText3 = wx.StaticText( self.m_panel2, wx.ID_ANY, u"Select Cover Image:", wx.DefaultPosition, wx.DefaultSize, 0 )		self.m_staticText3.Wrap( -1 )		bSizer5.Add( self.m_staticText3, 0, wx.ALL, 5 )				m_cbxCoverImageChoices = []		self.m_cbxCoverImage = wx.ComboBox( self.m_panel2, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, m_cbxCoverImageChoices, 0 )		bSizer5.Add( self.m_cbxCoverImage, 0, wx.ALL|wx.EXPAND, 5 )				self.m_btnAddCoverTag = wx.Button( self.m_panel2, wx.ID_ANY, u"Add Cover Tag", wx.DefaultPosition, wx.DefaultSize, 0 )		bSizer5.Add( self.m_btnAddCoverTag, 1, wx.ALL, 5 )				bSizer4.Add( bSizer5, 0, wx.EXPAND, 5 )				self.m_panel2.SetSizer( bSizer4 )		self.m_panel2.Layout()		bSizer4.Fit( self.m_panel2 )		self.m_panel3 = wx.Panel( self.m_splitter2, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.TAB_TRAVERSAL )		bSizer5 = wx.BoxSizer( wx.VERTICAL )				bSizer7 = wx.BoxSizer( wx.VERTICAL )				bSizer8 = wx.BoxSizer( wx.HORIZONTAL )				self.m_staticText1 = wx.StaticText( self.m_panel3, wx.ID_ANY, u"Find:", wx.DefaultPosition, wx.DefaultSize, 0 )		self.m_staticText1.Wrap( -1 )		bSizer8.Add( self.m_staticText1, 0, wx.ALL, 5 )				self.m_txtFind = wx.TextCtrl( self.m_panel3, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, 0 )		bSizer8.Add( self.m_txtFind, 1, wx.ALL, 5 )				self.m_staticText2 = wx.StaticText( self.m_panel3, wx.ID_ANY, u"Replace:", wx.DefaultPosition, wx.DefaultSize, 0 )		self.m_staticText2.Wrap( -1 )		bSizer8.Add( self.m_staticText2, 0, wx.ALL, 5 )				self.m_txtReplace = wx.TextCtrl( self.m_panel3, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, 0 )		bSizer8.Add( self.m_txtReplace, 1, wx.ALL, 5 )				bSizer7.Add( bSizer8, 0, wx.EXPAND, 5 )				bSizer9 = wx.BoxSizer( wx.HORIZONTAL )				self.m_chkMatchCase = wx.CheckBox( self.m_panel3, wx.ID_ANY, u"Match Case", wx.DefaultPosition, wx.DefaultSize, 0 )		bSizer9.Add( self.m_chkMatchCase, 0, wx.ALL, 5 )				self.m_chkWholeWord = wx.CheckBox( self.m_panel3, wx.ID_ANY, u"Whole Word", wx.DefaultPosition, wx.DefaultSize, 0 )		bSizer9.Add( self.m_chkWholeWord, 0, wx.ALL, 5 )				self.m_chkRegEx = wx.CheckBox( self.m_panel3, wx.ID_ANY, u"Regular Expression", wx.DefaultPosition, wx.DefaultSize, 0 )		bSizer9.Add( self.m_chkRegEx, 1, wx.ALL, 5 )				self.m_btnFind = wx.Button( self.m_panel3, wx.ID_ANY, u"Find", wx.DefaultPosition, wx.DefaultSize, 0 )		bSizer9.Add( self.m_btnFind, 0, wx.ALL, 5 )				self.m_btnReplace = wx.Button( self.m_panel3, wx.ID_ANY, u"Replace/Find", wx.DefaultPosition, wx.DefaultSize, 0 )		bSizer9.Add( self.m_btnReplace, 0, wx.ALL, 5 )				bSizer7.Add( bSizer9, 0, wx.EXPAND, 5 )				self.m_txtMain = wx.TextCtrl( self.m_panel3, wx.ID_ANY, wx.EmptyString, wx.DefaultPosition, wx.DefaultSize, wx.HSCROLL|wx.TE_MULTILINE|wx.TE_NOHIDESEL )		bSizer7.Add( self.m_txtMain, 4, wx.ALL|wx.EXPAND, 5 )				bSizer5.Add( bSizer7, 1, wx.EXPAND, 5 )				self.m_panel3.SetSizer( bSizer5 )		self.m_panel3.Layout()		bSizer5.Fit( self.m_panel3 )		self.m_splitter2.SplitVertically( self.m_panel2, self.m_panel3, 300 )		bSizer3.Add( self.m_splitter2, 1, wx.EXPAND, 5 )				self.m_panel.SetSizer( bSizer3 )		self.m_panel.Layout()		bSizer3.Fit( self.m_panel )		bSizer2.Add( self.m_panel, 1, wx.EXPAND |wx.ALL, 0 )				self.SetSizer( bSizer2 )		self.Layout()		self.m_statusBar = self.CreateStatusBar( 1, wx.ST_SIZEGRIP, wx.ID_ANY )		self.m_menubar = wx.MenuBar( 0 )		self.m_mnFile = wx.Menu()		self.m_mniOpen = wx.MenuItem( self.m_mnFile, m_mniOpenId, u"&Open..."+ u"\t" + u"CTRL+O", wx.EmptyString, wx.ITEM_NORMAL )		self.m_mnFile.AppendItem( self.m_mniOpen )				self.m_mniSave = wx.MenuItem( self.m_mnFile, m_mniSaveId, u"&Save File..."+ u"\t" + u"CTRL+S", wx.EmptyString, wx.ITEM_NORMAL )		self.m_mnFile.AppendItem( self.m_mniSave )				self.m_mniSaveEpub = wx.MenuItem( self.m_mnFile, wx.ID_ANY, u"Save &Epub..."+ u"\t" + u"CTRL+E", wx.EmptyString, wx.ITEM_NORMAL )		self.m_mnFile.AppendItem( self.m_mniSaveEpub )				self.m_mniAddToLibrary = wx.MenuItem( self.m_mnFile, wx.ID_ANY, u"Add to &Library"+ u"\t" + u"CTRL+L", wx.EmptyString, wx.ITEM_NORMAL )		self.m_mnFile.AppendItem( self.m_mniAddToLibrary )		self.m_mniAddToLibrary.Enable( False )				self.m_mnFile.AppendSeparator()				self.m_mniExit = wx.MenuItem( self.m_mnFile, wx.ID_EXIT, u"&Quit"+ u"\t" + u"CTRL+Q", wx.EmptyString, wx.ITEM_NORMAL )		self.m_mnFile.AppendItem( self.m_mniExit )				self.m_menubar.Append( self.m_mnFile, u"&File" ) 				self.m_mnEdit = wx.Menu()		self.m_mniFind = wx.MenuItem( self.m_mnEdit, wx.ID_ANY, u"Find"+ u"\t" + u"CTRL+F", wx.EmptyString, wx.ITEM_NORMAL )		self.m_mnEdit.AppendItem( self.m_mniFind )				self.m_mniReplace = wx.MenuItem( self.m_mnEdit, wx.ID_ANY, u"Replace/Find"+ u"\t" + u"CTRL+G", wx.EmptyString, wx.ITEM_NORMAL )		self.m_mnEdit.AppendItem( self.m_mniReplace )				self.m_mniReformat = wx.MenuItem( self.m_mnEdit, wx.ID_ANY, u"Reformat XML"+ u"\t" + u"CTRL+R", wx.EmptyString, wx.ITEM_NORMAL )		self.m_mnEdit.AppendItem( self.m_mniReformat )				self.m_mniAddImages = wx.MenuItem( self.m_mnEdit, wx.ID_ANY, u"Add &Images"+ u"\t" + u"CTRL+I", wx.EmptyString, wx.ITEM_NORMAL )		self.m_mnEdit.AppendItem( self.m_mniAddImages )		self.m_mniAddImages.Enable( False )				self.m_mniRebuildContent = wx.MenuItem( self.m_mnEdit, wx.ID_ANY, u"&Rebuild OPF and TOC"+ u"\t" + u"CTRL+B", wx.EmptyString, wx.ITEM_NORMAL )		self.m_mnEdit.AppendItem( self.m_mniRebuildContent )		self.m_mniRebuildContent.Enable( False )				self.m_menubar.Append( self.m_mnEdit, u"Edit" ) 				self.m_mnHelp = wx.Menu()		self.m_mniAbout = wx.MenuItem( self.m_mnHelp, wx.ID_ABOUT, u"&About", wx.EmptyString, wx.ITEM_NORMAL )		self.m_mnHelp.AppendItem( self.m_mniAbout )				self.m_menubar.Append( self.m_mnHelp, u"&Help" ) 				self.SetMenuBar( self.m_menubar )						# Connect Events		self.m_treeFiles.Bind( wx.EVT_TREE_SEL_CHANGED, self.m_treeFilesSelChanged )		self.m_btnDelete.Bind( wx.EVT_BUTTON, self.m_btnDeleteClick )		self.m_btnAddCoverTag.Bind( wx.EVT_BUTTON, self.m_btnAddCoverTagClick )		self.m_btnFind.Bind( wx.EVT_BUTTON, self.m_btnFindClick )		self.m_btnReplace.Bind( wx.EVT_BUTTON, self.m_btnReplaceClick )		self.Bind( wx.EVT_MENU, self.m_mniOpenClick, id = self.m_mniOpen.GetId() )		self.Bind( wx.EVT_MENU, self.m_mniSaveClick, id = self.m_mniSave.GetId() )		self.Bind( wx.EVT_MENU, self.m_mniSaveEpubClick, id = self.m_mniSaveEpub.GetId() )		self.Bind( wx.EVT_MENU, self.m_mniAddToLibraryClick, id = self.m_mniAddToLibrary.GetId() )		self.Bind( wx.EVT_MENU, self.m_mniExitClick, id = self.m_mniExit.GetId() )		self.Bind( wx.EVT_MENU, self.m_mniFindClick, id = self.m_mniFind.GetId() )		self.Bind( wx.EVT_MENU, self.m_mniReplaceClick, id = self.m_mniReplace.GetId() )		self.Bind( wx.EVT_MENU, self.m_mniReformatClick, id = self.m_mniReformat.GetId() )		self.Bind( wx.EVT_MENU, self.m_mniAddImagesClick, id = self.m_mniAddImages.GetId() )		self.Bind( wx.EVT_MENU, self.m_mniRebuildContentClick, id = self.m_mniRebuildContent.GetId() )		self.Bind( wx.EVT_MENU, self.m_mniAboutClick, id = self.m_mniAbout.GetId() )		def __del__( self ):		pass			# Virtual event handlers, overide them in your derived class	def m_treeFilesSelChanged( self, event ):		event.Skip()		def m_btnDeleteClick( self, event ):		event.Skip()		def m_btnAddCoverTagClick( self, event ):		event.Skip()		def m_btnFindClick( self, event ):		event.Skip()		def m_btnReplaceClick( self, event ):		event.Skip()		def m_mniOpenClick( self, event ):		event.Skip()		def m_mniSaveClick( self, event ):		event.Skip()		def m_mniSaveEpubClick( self, event ):		event.Skip()		def m_mniAddToLibraryClick( self, event ):		event.Skip()		def m_mniExitClick( self, event ):		event.Skip()		def m_mniFindClick( self, event ):		event.Skip()		def m_mniReplaceClick( self, event ):		event.Skip()		def m_mniReformatClick( self, event ):		event.Skip()		def m_mniAddImagesClick( self, event ):		event.Skip()		def m_mniRebuildContentClick( self, event ):		event.Skip()		def m_mniAboutClick( self, event ):		event.Skip()		def m_splitter2OnIdle( self, event ):		self.m_splitter2.SetSashPosition( 300 )		self.m_splitter2.Unbind( wx.EVT_IDLE )	